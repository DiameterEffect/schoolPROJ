
import java.util.Random;
import java.util.Scanner;
import java.lang.Math;
import java.util.random.*;
public class DiceGameThree
{
   
    
        //Variabiles for AI game
        private static double pot = 0;
        private static double Player1BAL = 1000;
        private static double Player1BET = 0;
        
        private static double Player2BAL = 1000;
        private static double PLayer2BET = 0;
        private static int DICE1 = 6;
        private static int DICE2 = 6;
        ///whatever dice they rolled
        private static int Player1diceSUM = 0;
        private static int PlayerPOINT;
        private static int Player2diceSUM = 0;
        

        private static Random die1 = new Random();
        private static Random die2 = new Random();
        private static int total;

       

        // the value for this variable
        // never changes and is used after
        // every instance when a player wins or loses
        private static final int RESET_POT_TO_ZERO = 0;





    

    public static void main(String[] args) 
    {
        
        Scanner scannerObj = new Scanner(System.in);
        int[] diceValues = DiceGameThree.diceGEN();
       
        //game.Player2Game(diceValues);
         
        int choice = 0;

        do
        {
            ////Copy down menu options
            System.out.println("1. Rules");
            System.out.println("2. Play against computers");
            System.out.println("3. Play 2 player game");
            System.out.println("4. See high score");
            System.out.println("5. Quit");

            choice = scannerObj.nextInt();
            switch (choice)

            {
                
                case 1:

                    ///Rules(no method needed)
                    rules();
                    break;
                
                case 2:
                    ///play againist computer
                    AicomputerGame();
                    break;
                case 3:

                    ///play 2 player game we call in PLayer2Game class
                    Player2Game();
                    break;

                case 4:

                    ///See high score
                    HighScore();
                    break;
                
                case 5:

                    ///quit
                    break;

                default:
                ///error log
                    System.out.println("error, invaild number, try again.");
                    break;
            }
        }while(choice!=5);
        {
            System.out.println("good bye");

            scannerObj.close();

        }


    }

    public static void rules() 
    {
        System.out.println("Game rules:");
        System.out.println("Player starts with 20 dollars");
        System.out.println("If a player rolls a 7 or an 11 with two of the dice they");
        System .out.println("win the game and they take the cash. If player rolls a 2-3-12 they lose.");
        System .out.println("Player wins");
    }
    
    public static void AicomputerGame() 
    {
        

        Scanner scannerObj = new Scanner(System.in);
        
        ///let the player enter whatever username they want
        System.out.println("Enter the username you want");
        String Player1 = scannerObj.next();
        System.out.println("Your username is: " + Player1);
        //Player and CPU rolls dice to see who is the shooter(Shooter gets to roll dice)
        int Player1ShooterSum = 0;
        int CPUShooterSum = 0;
        boolean flag = true;
        while (flag)
        {
            
            //Logic statement to decide who goes first

            System.out.println(Player1 + " it is your turn to roll to see who is the shooter");
            
            //generates dice numbers for player1
            int[] diceValuesSHOOTER = diceGEN();
            DICE1 = diceValuesSHOOTER[0];
            DICE2 = diceValuesSHOOTER[1];
    
            Player1ShooterSum =  DICE1 + DICE2;

            //display the player1shooter sum here
            System.out.println(Player1 + " rolled " + Player1ShooterSum);

    
            System.out.println("It's now the CPU's turn to roll to see who is the shooter");
    
            //generates dice numbers for CPU
            int[] diceValuesSHOOTER2 = diceGEN();
            DICE1 = diceValuesSHOOTER2[0];
            DICE2 = diceValuesSHOOTER2[1];
    
            CPUShooterSum = DICE1 + DICE2;
            System.out.println("CPU rolled " + CPUShooterSum);

            if (Player1ShooterSum > CPUShooterSum)
            {
                System.out.println(Player1 + " gets to shoot first!");
                
                
                //Player bet goes
                System.out.println(Player1 + "'s turn to make a bet!");
                System.out.println(Player1 + ", max number you can bet is " + Player1BAL);
                System.out.println(Player1 + ", how much would you like to bet?");
                double answ = scannerObj.nextDouble();
                Player1BET = answ;

                //Safety if Player enters invaild values.
                while(Player1BET < 0 || Player1BET > Player1BAL )
                {
                    System.out.println("Error, you must select a number greater than 0 or");
                    System.out.println("less than or equal to your balance which is " + Player1BAL);
                    System.out.println(Player1 + " How much would you like to bet?");
                    double answ2 = scannerObj.nextDouble();
                    Player1BET = answ2;
        
                }
                
                //pot functioning
                pot = pot + Player1BET;
                System.out.println(Player1 + " betted " + Player1BET);
                System.out.println("CPU must match " + Player1 +  "'s bet");

                PLayer2BET = Player1BET;
                System.out.println("CPU betted " + PLayer2BET);                                
                pot = pot + PLayer2BET;
                
                System.out.println("The total in the pot is now " + pot);

                
                //Update the balance for both players
                Player1BAL = Player1BAL - Player1BET;
                Player2BAL = Player2BAL - PLayer2BET;

                //Player 1 turn to roll dice
                System.out.println(Player1 + "'s turn to roll dice for the First Roll!");
                
                //Generates the random values that Player 1 rolls
                int[] diceValues = diceGEN();
                DICE1 = diceValues[0];
                DICE2 = diceValues[1];

                //Sum of dice they rolled
                Player1diceSUM = DICE1+DICE2;

                System.out.println("The sum of the dice rolled by " + Player1  + " is "+ Player1diceSUM);



                //full switch statement applies to the first roll only
                //except for the default section where a point number
                //is generated

                //first roll code for player1
                switch (Player1diceSUM) 
                {
                    //Losing scenario
                    case 2:
                    case 3:
                    case 12:
                        System.out.println(Player1 + " rolled " + Player1diceSUM);
                        System.out.println("You lost!");
                        System.out.println("CPU gets the pot");

                        //add the pot to CPU balance
                        Player2BAL = Player2BAL + pot;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot = RESET_POT_TO_ZERO;
                        
                        //displays current values of the player and CPU
                        System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                        
                        
                        ///CPU gets money
                        flag = false;
                        break;
                    //winning scenario
                    case 7:
                    case 11:
                        System.out.println(Player1 + " rolled " + Player1diceSUM);
                        System.out.println("You win!");
                        System.out.println(Player1 + " gets the pot!");

                        //add the pot to player1 balance
                        Player1BAL = Player1BAL + pot;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot = RESET_POT_TO_ZERO;
                        
                        //displays current values of the player and CPU
                        System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                        
                        flag = false;
                        break;
                    default:
                        // code to continue game if he rolled a point number
                     //once you roll a 7 after establishing a point number,
                        //shooter loses and cpu becomes shooter
                        //flag = true;
                        System.out.println("You rolled a point number " + Player1diceSUM +  " roll again!!");
                        PlayerPOINT = Player1diceSUM;
                        //flag = false;
                        System.out.println("Your point is " + PlayerPOINT+ "");
                         
                        System.out.println("Re roll method must go here for when player 1 is shooter!!");
                        do
                        {
                            total = rollDice();
                            if (total == 7)
                            {
                                System.out.println( Player1 + " rolled a 7 shooter loses");


                                //add the pot to CPU balance
                                Player2BAL = Player2BAL + pot;

                                //reset pot back to 0 after someone wins or loses the pot
                                pot = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                                
                            
                                ///CPU gets money
                                return;
                                
                            }
                            else if (total == PlayerPOINT)
                            {
                                System.out.println(Player1 + " rolled the point! Shooter wins!");

                                //add the pot to player1 balance
                                Player1BAL = Player1BAL + pot;

                                //reset pot back to 0 after someone wins or loses the pot
                                pot = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);

                                

                                return;

                            }
                            else
                            {
                                System.out.println("Keep rolling, neither the 7 or " + PlayerPOINT + "was hit!");
                            }
                        } while(total != PlayerPOINT || total != 7 );                        
                                        flag = false;
                                        break;


                    
                }
                
                System.out.println("You're inside the if statement");
                //This flag will have them get kicked out of the if statement
                //flag=false;
                //write ur code here.
                //Re-roll if they have point

                
            }
            else if (Player1ShooterSum < CPUShooterSum) 
            {
                System.out.println("CPU gets to shoot first!");


                
                //CPU bet goes here
                System.out.println("CPU's turn to make a bet!");
                System.out.println("Max number CPU can bet is " + Player2BAL);
                System.out.println("CPU, how much would you like to bet?");
            
                double minCPUbet = 1.00;
                double maxCPUbet = Player2BAL;
                double CPUbet = Math.floor((Math.random() * (maxCPUbet  - minCPUbet + 0.01) + minCPUbet) * 100) / 100;
                
                PLayer2BET = CPUbet;



                //pot functioning
                pot = pot + PLayer2BET;
                System.out.println("CPU betted " + PLayer2BET);
                System.out.println(Player1 + " must match CPU's bet");

                Player1BET = PLayer2BET;
                System.out.println(Player1 + " betted " + Player1BET);
                pot = pot + Player1BET;
                
                System.out.println("The total in the pot is now " + pot);

                
                
                //Update the balance for both players
                Player1BAL = Player1BAL - Player1BET;
                Player2BAL = Player2BAL - PLayer2BET;

                int[] diceValues = diceGEN();
                DICE1 = diceValues[0];
                DICE2 = diceValues[1];

                //Sum of dice they rolled
                Player2diceSUM = DICE1+DICE2;

                switch (Player2diceSUM) 
                {
                    //Losing scenario
                    case 2:
                    case 3:
                    case 12:
                        System.out.println("CPU rolled " + Player2diceSUM);
                        System.out.println("CPU lost!");
                        System.out.println(Player1 + " gets the pot!");

                        //add the pot to player1 balance
                        Player1BAL = Player1BAL + pot;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot = RESET_POT_TO_ZERO;
                        
                        System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                        
                        
                        ///CPU gets money
                        //flag = false;
                        break;
                    //winning scenario
                    case 7:
                    case 11:
                        System.out.println("CPU rolled " + Player2diceSUM);
                        System.out.println("CPU wins!");
                        System.out.println("CPU gets the pot");

                        //add the pot to player1CPU balance
                        Player2BAL = Player2BAL + pot;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot = RESET_POT_TO_ZERO;
                        
                        //displays current values of the player and CPU
                        System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);

                        //flag = false;
                        break;
                    default:
                        // code to continue game if he rolled a point number
                        //once you roll a 7 after establishing a point number,
                        //shooter loses and cpu becomes shooter
                        //flag = true;
                        System.out.println("CPU rolled a point number " + Player2diceSUM  + " roll again!!");
                        int PlayerPOINT2 = Player2diceSUM;
                        //flag = false;
                        System.out.println("Your point is " + PlayerPOINT2+ "");
                        boolean player2TURN = false;
                        //String player2userName;
                        System.out.println("Re roll method must go here for when CPU is the shooter!!!");
                        // ReRollAfterPointForCPU();
                        do
                        {
                            total = rollDice();
                            if (total == 7)
                            {
                                System.out.println("CPU rolled a 7 shooter loses");
                
                
                                //add the pot to CPU balance
                                Player1BAL = Player1BAL + pot;
                
                                //reset pot back to 0 after someone wins or loses the pot
                                pot = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                                
                            
                                ///CPU gets money
                                return;
                                
                            }
                            else if (total == PlayerPOINT2)
                            {
                                System.out.println("CPU rolled the point! Shooter wins!");
                
                                //add the pot to player1 balance
                                Player2BAL = Player2BAL + pot;
                
                                //reset pot back to 0 after someone wins or loses the pot
                                pot = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                
                                
                
                                return;
                
                            }
                            else
                            {
                                System.out.println("Keep rolling, neither the 7 or " + PlayerPOINT2 + " was hit!");
                            }
                        } while(total != PlayerPOINT2 || total != 7 );


                        flag = false;
                        break;


                    
                        
                }


                ///Switch statements from player 1 First roll code (not finished)
                
                System.out.println("You're inside the else if statement");

                flag = false;
                //boot
                
            } 
            else 
            {
                System.out.println("you guys rolled the same");
                System.out.println("re rolling");
                //Boots them back to while statement
                flag = true;
            }

        }
        System.out.println("You're inside the AI computer method");



        //System.out.println("Rolling again, you must roll the same point number or...");
        
    }

// need to pass Player 1, Player 2, and Player 1 and 2 bet then we determine the highest score from them and add
// add it up from there each time they  run the menu
    public static void HighScore(Player2BAL) 
    {
        ////For this we need to get Player 1 user name from
        /// AIcomputerGame and then print the content into the file
        ///ex John score is 20
        // or have player store their score under
        System.out.println("High score system" + Player2BAL); 
           
    }

    public static void Player2Game()
    {
        double pot_1v1 = 0;
        double Player1_1v1BAL = 1000;
        double Player1_1v1BET = 0;
        
        double Player2_1v1BAL = 1000;
        double PLayer2_1v1BET = 0;
        int DICE1 = 6;
        int DICE2 = 6;
        ///whatever dice they rolled
        int Player1_1v1diceSUM = 0;
        int Player1_1v1POINT;
        int Player2_1v1diceSUM = 0;
        int Player2_1v1POINT;

        Scanner scannerObj = new Scanner(System.in);
        
        ///let the player enter whatever username they want
        System.out.println("Player 1, enter the username you want");
        String Player1_1v1 = scannerObj.next();
        System.out.println("Player 1 username is: " + Player1_1v1);
        //Player and CPU rolls dice to see who is the shooter(Shooter gets to roll dice)

        System.out.println("Player 2, enter the username you want");
        String Player2_1v1 = scannerObj.next();
        System.out.println("Player 2 username is: " + Player2_1v1);
        int Player1_1v1ShooterSum = 0;
        int Player2_1v1ShooterSum = 0;
        boolean flag = true;
        while (flag)
        {
            
            //Logic statement to decide who goes first

            System.out.println(Player1_1v1 + " it is your turn to roll to see who is the shooter");
            
            //generates dice numbers for player1
            int[] diceValuesSHOOTER = diceGEN();
            DICE1 = diceValuesSHOOTER[0];
            DICE2 = diceValuesSHOOTER[1];
    
            Player1_1v1ShooterSum =  DICE1 + DICE2;

            //display the player1shooter sum here
            System.out.println(Player1_1v1 + " rolled " + Player1_1v1ShooterSum);

    
            System.out.println("It's now " + Player2_1v1 + "'s turn to roll to see who is the shooter");
    
            //generates dice numbers for CPU
            int[] diceValuesSHOOTER2 = diceGEN();
            DICE1 = diceValuesSHOOTER2[0];
            DICE2 = diceValuesSHOOTER2[1];
    
            Player2_1v1ShooterSum = DICE1 + DICE2;
            System.out.println(Player2_1v1 + " rolled " + Player2_1v1ShooterSum);

            if (Player1_1v1ShooterSum > Player2_1v1ShooterSum)
            {
                System.out.println(Player1_1v1 + " gets to shoot first!");
                
                
                //Player bet goes
                System.out.println(Player1_1v1 + "'s turn to make a bet!");
                System.out.println(Player1_1v1 + ", max number you can bet is " + Player1_1v1BAL);
                System.out.println(Player1_1v1 + ", how much would you like to bet?");
                double answ = scannerObj.nextDouble();
                Player1_1v1BET = answ;

                //Safety if Player enters invaild values.
                while(Player1_1v1BET < 0 || Player1_1v1BET > Player1_1v1BAL )
                {
                    System.out.println("Error, you must select a number greater than 0 or");
                    System.out.println("less than or equal to your balance which is " + Player1_1v1BAL);
                    System.out.println(Player1_1v1 + " How much would you like to bet?");
                    double answ2 = scannerObj.nextDouble();
                    Player1_1v1BET = answ2;
        
                }
                
                //pot functioning
                pot_1v1 = pot_1v1 + Player1_1v1BET;
                System.out.println(Player1_1v1 + " betted " + Player1_1v1BET);
                System.out.println(Player2_1v1 +" must match " + Player1_1v1 +  "'s bet");

                PLayer2_1v1BET = Player1_1v1BET;
                System.out.println(Player2_1v1 +" CPU betted " + PLayer2_1v1BET);                                
                pot_1v1 = pot_1v1 + PLayer2_1v1BET;
                
                System.out.println("The total in the pot is now " + pot_1v1);

                
                //Update the balance for both players
                Player1_1v1BAL = Player1_1v1BAL - Player1_1v1BET;
                Player2_1v1BAL = Player2_1v1BAL - PLayer2_1v1BET;

                //Player 1 turn to roll dice
                System.out.println(Player1_1v1 + "'s turn to roll dice for the First Roll!");
                
                //Generates the random values that Player 1 rolls
                int[] diceValues = diceGEN();
                DICE1 = diceValues[0];
                DICE2 = diceValues[1];

                //Sum of dice they rolled
                Player1_1v1diceSUM = DICE1+DICE2;

                System.out.println("The sum of the dice rolled by " + Player1_1v1  + " is "+ Player1_1v1diceSUM);



                //full switch statement applies to the first roll only
                //except for the default section where a point number
                //is generated

                //first roll code for player1
                switch (Player1_1v1diceSUM) 
                {
                    //Losing scenario
                    case 2:
                    case 3:
                    case 12:
                        System.out.println(Player1_1v1 + " rolled " + Player1_1v1diceSUM);
                        System.out.println("You lost!");
                        System.out.println(Player2_1v1 + " gets the pot");

                        //add the pot to CPU balance
                        Player2_1v1BAL = Player2_1v1BAL + pot_1v1;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot_1v1 = RESET_POT_TO_ZERO;
                        
                        //displays current values of the player and CPU
                        System.out.println("CPU now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);
                        
                        
                        ///CPU gets money
                        flag = false;
                        break;
                    //winning scenario
                    case 7:
                    case 11:
                        System.out.println(Player1_1v1 + " rolled " + Player1_1v1diceSUM);
                        System.out.println("You win!");
                        System.out.println(Player1_1v1 + " gets the pot!");

                        //add the pot to player1 balance
                        Player1_1v1BAL = Player1_1v1BAL + pot_1v1;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot_1v1 = RESET_POT_TO_ZERO;
                        
                        //displays current values of the player and CPU
                        System.out.println(Player2_1v1+ " now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);
                        
                        flag = false;
                        break;
                    default:
                        // code to continue game if he rolled a point number
                     //once you roll a 7 after establishing a point number,
                        //shooter loses and cpu becomes shooter
                        //flag = true;
                        System.out.println("You rolled a point number " + Player1_1v1diceSUM +  " roll again!!");
                        Player1_1v1POINT = Player1_1v1diceSUM;
                        //flag = false;
                        System.out.println("Your point is " + Player1_1v1POINT+ "");
                         
                        System.out.println("Re roll method must go here for when player 1 is shooter!!");
                        do
                        {
                            total = rollDice();
                            if (total == 7)
                            {
                                System.out.println( Player1_1v1 + " rolled a 7 shooter loses");


                                //add the pot to CPU balance
                                Player2_1v1BAL = Player2_1v1BAL + pot_1v1;

                                //reset pot back to 0 after someone wins or loses the pot
                                pot_1v1 = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);
                                
                            
                                ///CPU gets money
                                return;
                                
                            }
                            else if (total == Player1_1v1POINT)
                            {
                                System.out.println(Player1_1v1 + " rolled the point! Shooter wins!");

                                //add the pot to player1 balance
                                Player1_1v1BAL = Player1_1v1BAL + pot_1v1;

                                //reset pot back to 0 after someone wins or loses the pot
                                pot_1v1 = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);

                                

                                return;

                            }
                            else
                            {
                                System.out.println("Keep rolling, neither the 7 or " + Player1_1v1POINT + "was hit!");
                            }
                        } while(total != Player1_1v1POINT || total != 7 );                        
                                        flag = false;
                                        break;


                    
                }
                
                System.out.println("You're inside the if statement");
                //This flag will have them get kicked out of the if statement
                //flag=false;
                //write ur code here.
                //Re-roll if they have point

                
            }
            else if (Player1_1v1ShooterSum < Player2_1v1ShooterSum) 
            {
                System.out.println(Player2_1v1 +" gets to shoot first!");


                
                //CPU bet goes here
                System.out.println(Player2_1v1 + " turn to make a bet!");
                System.out.println("Max number "+ Player2_1v1 + " can bet is " + Player2_1v1BAL);
                System.out.println(Player2_1v1 + " how much would you like to bet?");
            
                while(PLayer2_1v1BET < 0 || PLayer2_1v1BET > Player2_1v1BAL )
                {
                    System.out.println("Error, you must select a number greater than 0 or");
                    System.out.println("less than or equal to your balance which is " + Player2_1v1BAL);
                    System.out.println(Player2_1v1 + " How much would you like to bet?");
                    double answ2 = scannerObj.nextDouble();
                    PLayer2_1v1BET = answ2;
        
                }

                //pot functioning
                pot_1v1= pot_1v1 + PLayer2_1v1BET;
                System.out.println(Player2_1v1 +" betted " + PLayer2_1v1BET);
                System.out.println(Player1_1v1+ " must match" + Player2_1v1 + "'s bet");

                Player1_1v1BET = PLayer2_1v1BET;

                System.out.println(Player1_1v1 + " betted " + Player1_1v1BET);
                pot_1v1 = pot_1v1 + Player1_1v1BET;
                
                System.out.println("The total in the pot is now " + pot_1v1);

                
                
                //Update the balance for both players
                Player1_1v1BAL = Player1_1v1BAL - Player1_1v1BET;
                Player2_1v1BAL = Player2_1v1BAL - PLayer2_1v1BET;

                int[] diceValues = diceGEN();
                DICE1 = diceValues[0];
                DICE2 = diceValues[1];

                //Sum of dice they rolled
                Player2_1v1diceSUM = DICE1+DICE2;

                switch (Player2_1v1diceSUM) 
                {
                    //Losing scenario
                    case 2:
                    case 3:
                    case 12:
                        System.out.println(Player2_1v1 + "rolled " + Player2diceSUM);
                        System.out.println(Player2_1v1+ " lost!");
                        System.out.println(Player1_1v1 + " gets the pot!");

                        //add the pot to player1 balance
                        Player1_1v1BAL = Player1_1v1BAL + pot_1v1;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot_1v1 = RESET_POT_TO_ZERO;
                        
                        System.out.println(Player2_1v1 + " now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);
                        
                        
                        ///CPU gets money
                        //flag = false;
                        break;
                    //winning scenario
                    case 7:
                    case 11:
                        System.out.println(Player2_1v1 + " rolled " + Player2_1v1diceSUM);
                        System.out.println(Player2_1v1 + " wins!");
                        System.out.println(Player2_1v1+ " gets the pot");

                        //add the pot to player1CPU balance
                        Player2_1v1BAL = Player2_1v1BAL + pot_1v1;

                        //reset pot back to 0 after someone wins or loses the pot
                        pot_1v1 = RESET_POT_TO_ZERO;
                        
                        //displays current values of the player and CPU
                        System.out.println(Player2_1v1+ " now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);

                        //flag = false;
                        break;
                    default:
                        // code to continue game if he rolled a point number
                        //once you roll a 7 after establishing a point number,
                        //shooter loses and cpu becomes shooter
                        //flag = true;
                        System.out.println(Player2_1v1+ " rolled a point number " + Player2_1v1diceSUM  + " roll again!!");
                        int PlayerPOINT2 = Player2_1v1diceSUM;
                        //flag = false;
                        System.out.println("Your point is " + PlayerPOINT2+ "");
                        boolean player2TURN = false;
                        //String player2userName;
                        System.out.println("Re roll method must go here for when" Player2_1v1 +" is the shooter!!!");
                        // ReRollAfterPointForCPU();
                        do
                        {
                            total = rollDice();
                            if (total == 7)
                            {
                                System.out.println(Player2_1v1 +" rolled a 7 shooter loses");
                
                
                                //add the pot to CPU balance
                                Player1_1v1BAL = Player1_1v1BAL + pot_1v1;
                
                                //reset pot back to 0 after someone wins or loses the pot
                                pot_1v1 = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println(Player2_1v1 +" now has " + Player2BAL + " and " + Player1 + " now has " + Player1BAL);
                                
                            
                                ///CPU gets money
                                return;
                                
                            }
                            else if (total == PlayerPOINT2)
                            {
                                System.out.println(Player2_1v1 + " rolled the point! Shooter wins!");
                
                                //add the pot to player1 balance
                                Player2_1v1BAL = Player2_1v1BAL + pot_1v1;
                
                                //reset pot back to 0 after someone wins or loses the pot
                                pot_1v1 = RESET_POT_TO_ZERO;
                                
                                //displays current values of the player and CPU
                                System.out.println("CPU now has " + Player2_1v1BAL + " and " + Player1_1v1 + " now has " + Player1_1v1BAL);
                
                                
                
                                return;
                
                            }
                            else
                            {
                                System.out.println("Keep rolling, neither the 7 or " + PlayerPOINT2 + " was hit!");
                            }
                        } while(total != PlayerPOINT2 || total != 7 );


                        flag = false;
                        break;


                    
                        
                }


                ///Switch statements from player 1 First roll code (not finished)
                
              

                flag = false;
                //boot
                
            } 
            else 
            {
                System.out.println("you guys rolled the same");
                System.out.println("re rolling");
                //Boots them back to while statement
                flag = true;
            }

        }
       ;



        //System.out.println("Rolling again, you must roll the same point number or...");
        
    }

    public static int[] diceGEN ()
    {
        int DICE1 = (int) (Math.random() * 6) + 1;
        int DICE2 = (int) (Math.random() * 6) + 1;
        int[] diceValues = {DICE1, DICE2};
        //System.out.println("Values in diceValues: " + DICE1 + " and " + DICE2);

        return diceValues;
        ///This generates a number everytime its called
        
    }

    public static int rollDice()
    {
        int d1Value = die1.nextInt(6) + 1;
        int d2Value = die2.nextInt(6) + 1;
        total = d1Value + d2Value;
        System.out.printf("You rolled a %d and %d which equals %d \n", d1Value, d2Value, total);
        return total;
    }

    


}

